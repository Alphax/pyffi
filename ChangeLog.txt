Version 0.10.7 (***)
* cgf:
  - indices are unsigned shorts now (fixes geometry corruption on import of
    large models)
  - MeshChunk.setGeometry gives useful error message if number of vertices is
    too large
* nif:
  - nif.xml has minor updates in naming
  - added NiBSplineData access functions

Version 0.10.6 (30 Mar 2008)
* tga: added missing xml file
* nif:
  - removed some question marks so the fields can be accessed easily in python
    interface
  - ControllerLink and StringPalette functions and doctests
  - quaternion functions in Matrix33 and Matrix44
  - new bspline modules (still to implement later)
  - fixed NiTransformInterpolator scaling bug
* cgf:
  - use tempfile for write test
* quick install batch file for windows

Version 0.10.5 (27 Mar 2008)
* qskope: make bitstructs editable
* cgf:
  - MeshChunk functions to get vertex colors (game independent).
  - Set vertex colors in setGeometry function.

Version 0.10.4 (26 Mar 2008)
* cgf:
  - fixed tangent space doctest
  - setGeometry argument sanity checking
  - setGeometry fix for empty material list
  - setGeometry tangent space update fix if there are no uvs

Version 0.10.3 (24 Mar 2008)
* added support for the TGA format
* tangentspace:
  - validate normals before calculating tangents
  - added new option to get orientation of tangent space relative to texture
  space (Crysis needs to know about this)
* installer detects Maya 2008 and copies relevant files to Maya Python
directory for the Maya scripts to work
* cgf:
  - tangent space cgftoaster
  - new MeshChunk updateTangentSpace function


Version 0.10.2 (22 Mar 2008)
* cgf:
  - fixed "normals" problem by setting last component of tangents to -1.0
  - meshchunk function to get all material indices, per triangle (game
  independent)
  - scaling fixes for datastreamchunk, meshchunk, and meshsubsetschunk
  - fixed version of BreakablePhysicsChunk
  - a few new findings in decoding the physics data (position and rotation)

Version 0.10.1 (21 Mar 2008)
* cgf:
  - some minor xml updates
  - setGeometry function for MeshChunk to set geometry for both Far Cry and
  Crysis in a unified way
  - uv.v opengl flip fix for Crysis MeshChunk data
* MathUtils: new function to calculate bounding box, center, and radius
* qskope: fixed bug which prevented setting material physics type to NONE

Version 0.10.0 (8 Mar 2008)
* cgf: ported A LOT of stuff from the Crysis Mod SDK 1.2; the most common
CE2 chunks now read and write successfully

Version 0.9.3 (7 Mar 2008)
* cgf:
  - decoded a lot of geometry data
    # vertices
    # normals
    # vertex colors
    # uvs
    # mesh material info
  - started decoding many other chunk types
  - added chr chunk types so files containing them can be processed (the data
  is ignored)
  - started adding functions to MeshChunk to have unified access to geometry
  data for both Far Cry and Crysis cgf files
* windows installer registers chr extension with qskope

Version 0.9.2 (26 Feb 2008)
* full support for the xml enum tag type, with improved editor in qskope
* new common string types (shared between cgf and nif formats)
  - null terminated
  - fixed sized
  - variable sized starting with integer describing length
* qskope: no more duplicate ptr refs in global view
* qskope: refactored delegate editor system to be more transparent and much
easier to extend
* cgf: crysis chunks have been partially decoded (still very much wip)
* cgf: added extra chunk size check on read to aid decoding
* dds: register dds extension with qskope on windows install
* nif: nifoptimize clamps material alpha to [0,1]

Version 0.9.1 (22 Feb 2008)
* full support for the xml bitstruct tag (for types that contain bit flags)
* added PyFFI.DDS library for dds file format
* nif: new function for NiPixelData to save image as dds file
* niftoaster: script for exporting images from NiPixelData blocks
* nifoptimize:
  - merge identical shape data blocks
  - remove empty NiNode children
  - update skin partition only if block already exists

Version 0.9.0 (11 Feb 2008)
* added PyFFI.KFM library for kfm file format
* cgf.xml and nif.xml updates
* new qBlockParent function to assign parents if the parent block does not
contain a reference to the child, but the child contains a reference to the
parent (as in MeshMorphTargetChunk and BoneInitialPosChunk)
* QSkope: root blocks sorted by reference number
* QSkope: added kfm format
* niftexdump: bug fixed when reading nifs that have textures without source

Version 0.8.2 (28 Jan 2008)
* fixed installer bug (nifoptimize would not launch from context menu)
* qskope:
  - handle back-references and shared blocks
  - blocks are now numbered
  - improved display references


Version 0.8.1 (27 Jan 2008)
* deep copy for structs and arrays
* nifoptimize:
  - detects cases where triangulated geometry performs better than stripified
  geometry (fixes a performance issue with non-smooth geometry reported by
  Lazarus)
  - can now also optimize NiTriShapes
  - throws away empty and/or duplicate children in NiNode lists

Version 0.8.0 (27 Jan 2008)
* qskope: new general purpose tool for visualizing files loaded with PyFFI
* cgf: corrected the bool implementation (using True/False rather than an int)
* nif: many xml updates, support for Culpa Innata, updates for emerge demo
* support for forward declaration of types (required for UnionBV)
* PyFFI.__hexversion__ for numeric represenation of the version number

Version 0.7.5 (14 Jan 2008)
* added a DTD for the 'fileformat' document type, to validate the xml
* bits tag for bitstructs, instead of add tag, to allow validation
* cgf: write the chunk header table at start, for crysis
* nifoptimize:
  - new command line option '-x' to exclude blocks per type
  - fixes corrupted texture paths (that is, files that got corrupted with
  nifskope 1.0 due to the \r \n bug)
  - on windows, the script can now be called from the .nif context menu
  - accept both lower and upper case 'y' for confirmation
  - new command line option '-p' to pause after run
* niftoaster: fix reporting of file size difference in readwrite test
* bug fixed when writing nifs of version <= 3.1
* support for multiple 'Top Level Object' (roots) for nifs of version <= 3.1
* various xml fixes
  - new version 20.3.0.2 from emerge demo
  - NiMeshPSysData bugfix and simplification
  - replaced NiTimeController Target with unknown int to cope with invalid
  pointers in nif versions <= 3.1
* fixed bug nifmakehsl.py script
* fixed bug in nifdump.py script
* new post installation script for installing/uninstalling registry keys

Version 0.7.4 (26 Dec 2007):
* fix in nif xml for a long outstanding issue which caused some nifs with mopp
shapes to fail
* fixed file size check bug in readwrite test for nif and cgf
* initial read and write support for crysis cgf files
* support for versions in structs
* updates for controller key types 6, 9, and 10, in cgf xml

Version 0.7.3 (13 Dec 2007):
* nif: fixed error message when encountering empty block type
* nif: dump script with block selection feature
* cgf: fix transform errors, ported matrix and vector operations from nif
library

Version 0.7.2 (3 Dec 2007):
* NifTester: new raisereaderror argument which simplifies the older system and
yields more instructive backtraces
* nif: better support for recent nif versions, if block sizes do not match
with the number of bytes read then the bytes are skipped and a warning is
printed, instead of raising an exception

Version 0.7.1 (27 Nov 2007):
* nif: fixed applyScale in bhkRigidBody

Version 0.7 (19 Nov 2007):
* fixed a problem locating the customized functions for Fedora 8 python which 
does not look in default locations besides sys.path
* new vector and matrix library under Utils (for internal use)
* new quick hull library for computing convex hulls
* new inertia library for computing mass, center of gravity, and inertia
tensors of solid and hollow objects
* nif: fixed order of bhkCollisionObject when writing nif files
* nif: new bhkRigidBody function for updating inertia, center of gravity, and
mass, for all types of primitives

Version 0.6 (3 Nov 2007)
* nifoptimize removes duplicate property blocks
* reduced memory footprint in skin data center and radius calculation for the
nif format
* new option to ignore strings when calculating hash
* code has been cleaned up using pylint
* added a lot more documentation
* refactored all common functions to take **kwargs as argument
* read and write functions have the file stream as first non-keyword argument
* refactored and simplified attribute parsing, using a common
_filteredAttributeList method used by all methods that need to parse
attributes; the version and user_version checks are now also consistent over
all functions (i.e. getRefs, getLinks, etc.)
* added more doctests

Version 0.5.2 (25 Oct 2007)
* added hash functions (useful for identifying and comparing objects)

Version 0.5.1 (19 Oct 2007)
* fixed a bug in the nif.xml file which prevented Oblivion skeleton.nif files
to load

Version 0.5 (19 Oct 2007)
* new functions to get block size
* various small bugs fixed
* nif: support for new versions (20.2.0.6, 20.2.0.7, 20.2.0.8, 20.3.0.3, 20.3.0.6, 20.3.0.9)
* nif: block sizes are now also written to the nif files, improving support
for writing 20.2.0.7+ nif versions
* nif: fixed flattenSkin bug (reported by Kikai)

Version 0.4.9 (13 Oct 2007)
* nif: nifoptimize no longer raises an exception on test errors, unless you
pass the -r option
* nif: nifoptimize will try to restore the original file if something goes 
wrong during write, so - in theory - it should no longer leave you with 
corrupt nifs; still it is recommended to keep your backups around just in case
* nif: niftesters recoded to accept arbitrary argument dictionaries; this
could cause incompatibilities for people writing their own scripts, but the
upgrade to the new system is fairly simple: check the niftemplate.py script
* nif: fixed bug in updateTangentSpace which caused an exception when uvs or
normals were not present
* nif: doctest for unsupported blocks in nifs

Version 0.4.8 (7 Oct 2007)
* cgf: MeshMorphTargetChunk is now supported too
* nif: new script (niftexdump.py) to dump texture and material info
* nif: added template script for quickly writing new nif scripts

Version 0.4.7 (4 Oct 2007)
* nif: new optimizer script

Version 0.4.6 (29 Sep 2007)
* nif and cgf documentation improved
* added a number of new doctests
* nif: new scripts
  - niftoaster.py for testing and modifying nif files (contributed by wz)
  - nifvisualizer.py for visualizing nif blocks (contributed by wz)
  - nifmakehsl.py for making hex workshop structure libraries for all nif
    versions
* nif: bundling NifVis and NifTester modules so you can make your own nif
  toasters and visualizers
* nif: fixed rare issue with skin partition calculation
* cgf: new script
  - cgftoaster.py for testing and modifying cgf files (similar to niftoaster.py)
* cgf: bundling CgfTester module so you can make your own cgf toasters
* cgf: various xml bugs fixed
* cgf: write support improved (but not entirely functional yet)
* cgf: material chunk custom function for extraction material shader and script
* Expression.py: support for empty string check in condition
	
Version 0.4.5 (16 Sep 2007)
* issue warning message instead of raising exception for improper rotation
matrix in setScaleRotationTranslation
* fixed skin partition bug during merge
* skin partition bone index padding and sorting for Freedom Force vs. the 3rd
Reich

Version 0.4.4 (2 Sep 2007)
* added mopp parser and simple mopp generator

Version 0.4.3 (17 Aug 2007)
* fixed bug that occurred if userver = 0 in the xml (fixes geometry morph data
in NIF versions 20.0.0.4 and up)
* NIF:
  - tree() function has been extended
  - some minor cleanups and more documentation

Version 0.4.2 (15 Aug 2007)
* kwargs for getRefs
* NIF:
  - fixed bug in skin partition calculation
  - when writing nif files the refs are written in sequence (instead of the links, so missing links will yield an exception, which is a good thing)
  - new functions to get list of extra data blocks and to add effect

Version 0.4.1 (14 Aug 2007)
* NIF:
  - new function to add collision geometries to packed tristripsshape
  - fixed bug in bhkListShape.addShape

Version 0.4 (12 Aug 2007)
* NIF:
  - new function updateBindPosition in NiGeometry to fix a geometry rest position from current bone positions
  - removed deprecated functions
  - (!) changed interface of addBone, no longer takes "transform" argument; use the new function updateBindPosition instead

Version 0.3.4 (11 Aug 2007)
* improved documentation
* fixed the 'in' operator in Bases/Array.py
* NIF:
  - doctest for NiNode
  - flatten skin fix for skins that consist of multiple shapes
  - support for the most common oblivion havok blocks

Version 0.3.3 (8 Aug 2007)
* NIF:
  - fixed a bug in the skin center and radius calculation
  - added copy function to Vector3
  - fixed NiGeometry doctest

Version 0.3.2 (7 Aug 2007)
* simplified interface (still wip) by using keyword arguments for common
functions such as read and write
* NIF:
  - fix for skin partition blocks in older nif versions such as Freedom Force vs. 3rd Reich
  - support for triangle skin partitions
  - added stitchstrips option for skin partitions
  - added a NiGeometry function to send bones to bind pose

Version 0.3.1 (6 Aug 2007):
* NIF:
  - new function for getting geometry skin deformation in rest pose
  - old rest pose functions are deprecated and will be removed from a future release

Version 0.3 (2 Aug 2007):
* NIF:
  - fixed an issue with writing skeleton.nif files
* CGF:
  - reading support for the most common blocks in static cgf files (experimental)

Version 0.2.1 (29 Jul 2007):
* NIF:
  - fixed bug in getTransform
  - new option in findChain to fix block type

Version 0.2 (29 Jul 2007):
* fixed argument passing when writing arrays
* NIF: added getControllers function to NiObjectNET

Version 0.1 (22 Jul 2007):
* bug fixed when writing array of strings
* NIF
  - new function to add bones
  - XML update, supports newer versions from Emerge Demo

Version 0.0 (7 Jul 2007):
* first public release
