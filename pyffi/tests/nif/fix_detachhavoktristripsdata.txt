Doctests for the fix_detachhavoktristripsdata spell
===================================================

NifToaster check
----------------

>>> import sys
>>> sys.path.append("scripts/NIF")
>>> import niftoaster
>>> sys.argv = ["niftoaster.py", "fix_detachhavoktristripsdata", "--dry-run", "--noninteractive", "tests/nif/test_fix_detachhavoktristripsdata.nif"]
>>> niftoaster.NifToaster().cli()
=== tests/nif/test_fix_detachhavoktristripsdata.nif ===
  --- fix_detachhavoktristripsdata ---
    ~~~ NiNode [MiddleWolfRug01] ~~~
      ~~~ NiTriStrips [MiddleWolfRug01:0] ~~~
        ~~~ bhkCollisionObject [] ~~~
          ~~~ bhkRigidBodyT [] ~~~
            ~~~ bhkListShape [] ~~~
              ~~~ bhkNiTriStripsShape [] ~~~
                detaching havok data
  writing to temporary file
Finished.

Explicit check
--------------

>>> from PyFFI.Formats.NIF import NifFormat
>>> from PyFFI.Spells.NIF import fix
>>> from PyFFI.Spells import Toaster
>>> data = NifFormat.Data()
>>> stream = open("tests/nif/test_fix_detachhavoktristripsdata.nif", "rb")
>>> data.read(stream)
>>> # check that data is shared
>>> data.roots[0].children[0].collisionObject.body.shape.subShapes[0].stripsData[0] is data.roots[0].children[0].data
True
>>> # run the spell that fixes this
>>> spell = fix.SpellDetachHavokTriStripsData(data=data)
>>> spell.recurse()
>>> # check that data is no longer shared
>>> data.roots[0].children[0].collisionObject.body.shape.subShapes[0].stripsData[0] is data.roots[0].children[0].data
False

