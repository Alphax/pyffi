Doctests for the niftoaster script
==================================

The --help switch
-----------------

>>> import sys
>>> sys.path.append("scripts/NIF")
>>> import niftoaster
>>> sys.argv = ["niftoaster.py", "--help"]
>>> try:
...     niftoaster.NifToaster().cli()
... except SystemExit: # --help uses sys.exit()
...     pass
Usage: niftoaster.py [options] <spell1> <spell2> ... <file>|<folder>
<BLANKLINE>
Apply the spells <spell1>, <spell2>, and so on, on <file>, or recursively on
<folder>.
<BLANKLINE>
Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --help-spell          show help specific to the given spells
  --examples            show examples of usage and exit
  --spells              list all spells and exit
  -a ARG, --arg=ARG     pass argument ARG to each spell
  -x EXCLUDE, --exclude=EXCLUDE
                        exclude block type EXCLUDE from spell; exclude
                        multiple block types by specifying this option more
                        than once
  -i INCLUDE, --include=INCLUDE
                        include only block type INCLUDE in spell; if this
                        option is not specified, then all block types are
                        included except those specified under --exclude;
                        include multiple block types by specifying this option
                        more than once
  -r, --raise           raise exception on errors during the spell; useful for
                        debugging spells
  --noninteractive      run a non-interactive session (overwrites files
                        without warning)
  -v VERBOSE, --verbose=VERBOSE
                        verbosity level: 0, 1, or 2 [default: 1]
  -p, --pause           pause when done
  --dry-run             for spells that modify files, save the modification to
                        a temporary file instead of writing it back to the
                        original file; useful for debugging spells
  --prefix=PREFIX       for spells that modify files, prepend PREFIX to file
                        name
  --diff                instead of writing back the file, write a binary patch
  --patch               apply all binary patches
  --diff-cmd=DIFFCMD    use ARG as diff command; this command must accept
                        precisely 3 arguments, oldfile, newfile, and
                        patchfile.
  --patch-cmd=PATCHCMD  use ARG as patch command; this command must accept
                        precisely 3 arguments, oldfile, newfile, and
                        patchfile.
  --series              run spells in series rather than in parallel

The --examples switch
---------------------

>>> import sys
>>> sys.path.append("scripts/NIF")
>>> import niftoaster
>>> sys.argv = ["niftoaster.py", "--examples"]
>>> niftoaster.NifToaster().cli() # doctest: +REPORT_NDIFF
* check if PyFFI can read all files in current directory
  (python version of nifskope's xml checker):
<BLANKLINE>
    python niftoaster.py check_read .
<BLANKLINE>
* optimize all nif files a directory tree, recursively
<BLANKLINE>
    python niftoaster.py optimize /path/to/your/nifs/
<BLANKLINE>
* print texture information of all nif files a directory tree, recursively
<BLANKLINE>
    python niftoaster.py dump_tex /path/to/your/nifs/
<BLANKLINE>
* update/generate mopps of all nif files a directory tree, recursively
<BLANKLINE>
    python niftoaster.py updatemopp /path/to/your/nifs/
<BLANKLINE>
* update/generate skin partitions of all nif files a directory tree,
recursively, for Freedom Force vs. The 3rd Reich
<BLANKLINE>
    python niftoaster.py ffvt3rskinpartition /path/to/your/nifs/
<BLANKLINE>
* run the profiler on PyFFI while reading nif files:
<BLANKLINE>
    python -m cProfile -s cumulative -o profile_read.txt niftoaster.py read .
<BLANKLINE>
* find out time spent on a particular test:
<BLANKLINE>
    python -m cProfile -s cumulative niftoaster.py tristrip
<BLANKLINE>
* merge skeleton roots and rest positions for all files in current directory:
<BLANKLINE>
    python niftoaster.py mergeskelandrestpos .
<BLANKLINE>
* scale all files in c:\zoo2 by a factor 100 - useful to
  visualize nif files from games such as Zoo Tycoon 2 that are otherwise too
  small to show up properly in nifskope:
<BLANKLINE>
    python niftoaster.py -a 100 scale "c:\zoo2"
<BLANKLINE>

The --spells switch
-------------------

>>> import sys
>>> sys.path.append("scripts/NIF")
>>> import niftoaster
>>> sys.argv = ["niftoaster.py", "--spells"]
>>> niftoaster.NifToaster().cli()
check_read
check_readwrite
check_nodenamesbyflag
checkbhkbodycenter
checkcenterradius
checkconvexshape
checkmopp
checkskincenterradius
checkskinpartition
checktangentspace
checktristrip
disableparallax
dump
dump_tex
exportpixeldata
fix_addtangentspace
fix_clampmaterialalpha
fix_deltangentspace
fix_detachhavoktristripsdata
fix_ffvt3rskinpartition
fix_texturepath
hackcheckskindata
hackmultiskelroot
hackskindataidtransform
hackskinrestpose
mergeskelandrestpos
optimize
optimize_experimental
optimize_split
scale
updatecenterradius
updatemopp
updateskinpartition

The check_readwrite spell and the --raise switch
------------------------------------------------

>>> import sys
>>> sys.path.append("scripts/NIF")
>>> import niftoaster
>>> sys.argv = ["niftoaster.py", "--verbose=1", "--raise", "check_readwrite", "tests/nif/"]
>>> niftoaster.NifToaster().cli() # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
NifError: unknown block type 'NiInvalid!'
>>> sys.argv = ["niftoaster.py", "--verbose=1", "check_readwrite", "tests/nif/"]
>>> niftoaster.NifToaster().cli() # doctest: +ELLIPSIS
=== tests/nif/invalid.nif ===
*** TEST FAILED ON tests/nif/invalid.nif                               ***
*** If you were running a spell that came with PyFFI, then             ***
*** please report this as a bug (include the file) on                  ***
*** http://sourceforge.net/tracker/?group_id=199269                    ***
<BLANKLINE>
=== tests/nif/test.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_dump_tex.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_fix_clampmaterialalpha.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_fix_detachhavoktristripsdata.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_fix_ffvt3rskinpartition.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_fix_tangentspace.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_fix_texturepath.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_opt_dupgeomdata.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_opt_dupverts.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
=== tests/nif/test_opt_emptyproperties.nif ===
  --- check_readwrite ---
    writing to temporary file
      comparing file sizes
Finished.

